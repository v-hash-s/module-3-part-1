(function(g,f){typeof exports==='object'&&typeof module!=='undefined'?module.exports=f():typeof define==='function'&&define.amd?define(f):(g=typeof globalThis!=='undefined'?globalThis:g||self,g.AxiosErrorFormat=f());}(this,(function(){'use strict';function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function () {};

      return {
        s: F,
        n: function () {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function (e) {
          throw e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function () {
      it = o[Symbol.iterator]();
    },
    n: function () {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function (e) {
      didErr = true;
      err = e;
    },
    f: function () {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}var axiosErrorFormat = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RESPONSE_KEYS = exports.CONFIG_KEYS = void 0;
  exports.CONFIG_KEYS = ['url', 'method', 'baseURL', 'headers', 'params', 'data', 'timeout', 'timeoutErrorMessage', 'withCredentials', 'auth', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'maxContentLength', 'maxBodyLength', 'maxRedirects', 'socketPath', 'proxy', 'decompress'];
  exports.RESPONSE_KEYS = ['data', 'status', 'statusText', 'headers'];
});var core = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAxiosError = exports.format = void 0;

  function format(error) {
    if (!isAxiosError(error)) {
      throw new TypeError('Invalid axios error');
    }

    var formatError = new Error(error.message);
    formatError.name = error.name;
    formatError.stack = error.stack;
    formatError.code = error.code;
    formatError.isAxiosError = error.isAxiosError;
    formatError.config = {};

    var _iterator = _createForOfIteratorHelper(axiosErrorFormat.CONFIG_KEYS),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var configKey = _step.value;

        if (error.config[configKey] !== undefined) {
          formatError.config[configKey] = error.config[configKey];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    if (error.response) {
      formatError.response = {};

      var _iterator2 = _createForOfIteratorHelper(axiosErrorFormat.RESPONSE_KEYS),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var responseKey = _step2.value;

          if (error.response[responseKey] !== undefined) {
            formatError.response[responseKey] = error.response[responseKey];
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }

    return formatError;
  }

  exports.format = format;

  function isAxiosError(error) {
    return !!(error === null || error === void 0 ? void 0 : error.isAxiosError);
  }

  exports.isAxiosError = isAxiosError;
});var dist = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.format = void 0;
  Object.defineProperty(exports, "format", {
    enumerable: true,
    get: function get() {
      return core.format;
    }
  });
});
var index = /*@__PURE__*/getDefaultExportFromCjs(dist);return index;})));