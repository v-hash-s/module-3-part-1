import { AxiosRequestConfig, AxiosResponse } from 'axios';
export declare const CONFIG_KEYS: readonly ["url", "method", "baseURL", "headers", "params", "data", "timeout", "timeoutErrorMessage", "withCredentials", "auth", "responseType", "xsrfCookieName", "xsrfHeaderName", "maxContentLength", "maxBodyLength", "maxRedirects", "socketPath", "proxy", "decompress"];
export declare const RESPONSE_KEYS: readonly ["data", "status", "statusText", "headers"];
export interface AxiosErrorFormat<T = any> {
    config: Pick<AxiosRequestConfig, typeof CONFIG_KEYS[number]>;
    code?: string;
    response?: Pick<AxiosResponse<T>, typeof RESPONSE_KEYS[number]>;
    isAxiosError: boolean;
}
export interface AxiosErrorFormatError<T = any> extends Error, AxiosErrorFormat<T> {
}
